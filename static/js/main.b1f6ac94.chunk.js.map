{"version":3,"sources":["components/Header/theme-context.js","components/Header/ThemeModal/Theme.jsx","components/Header/Header.js","components/Pagination/Pagination.js","components/Practice/TodoItem.js","components/Practice/TodoItemsList.js","components/Search/Search.js","components/DateSelector/DateSelector.js","components/Modal/Modal.js","components/Sidebar/Sidebar.js","components/Categories/CategoriesSelector.js","components/AddForm/AddForm.jsx","components/ViewButton/ViewChangeButton.jsx","components/Practice/Practice.js","components/Content/Content.js","components/Footer/Info.js","components/Footer/Footer.js","App.js","components/Data/todosData.js","index.js"],"names":["themes","light","button","show","dark","ThemeContext","React","createContext","Theme","toggleTheme","useContext","className","onClick","title","Header","theme","Pagination","todos","itemsPerPage","currentPage","currentPageHandler","currentTodos","numberOfPage","numberOfItems","length","paginateItemsCounter","Math","ceil","numberTodos","i","push","useEffect","map","number","key","TodoItem","showButton","item","handleChange","textEdit","saveEditedText","deleteItem","toggleButton","currentItemId","category","view","inputTodoEditedText","useRef","useState","isEditing","setIsEditing","text","editedText","setEditedText","current","focus","type","checked","completed","onChange","id","ref","e","target","value","TodoItemsList","search","currentCategory","currentDateRange","itemsPerPageHandler","status","today","month","startOfWeek","endOfWeek","dayAdd","numberDays","Date","getFullYear","getMonth","getDate","daySubst","getDaysArray","start","end","dates","day","setDate","filteredTodos","filter","date","toLocaleDateString","getDay","includes","startMonth","endMonth","toLowerCase","trim","reverse","index","Search","onSearch","searchValue","setSearchValue","onKeyUp","placeholder","required","DateSelector","currentDateRangeHandler","ModalWrapper","modal","setModal","userName","setUserName","message","setMessage","email","setEmail","isOpen","onRequestClose","name","alert","userData","localStorage","setItem","JSON","stringify","submitHandler","Sidebar","showModal","showSideBar","statusSwitchHandler","uncompletedTodos","completedTodos","allTodos","displayAllTodos","setDisplayAllTodos","sidebar","setSidebar","allTodosToggleHandler","CategoriesSelector","categories","categorySwitchHandler","defaultValue","label","AddForm","newTodoCategory","addTodo","newTodoCategoryHandler","inputText","setInputText","autoFocus","ViewChangeButton","viewToggle","Practice","todosData","Categories","setState","prevState","todo","addNewTodo","state","newTodo","now","success","messageErrors","newTodoCategoryHandlerClear","editedTodoText","handleSearch","newTodoItemCategory","createRef","this","Component","Content","Info","props","phone","href","social","Footer","about","contacts","tel","linkedin","App","setTheme","Provider","ReactDOM","render","0","1","2","3","4","5","6","7","8","9","10","11","document","getElementById"],"mappings":"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","file":"static/js/main.b1f6ac94.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const themes = {\r\n  light: {\r\n    \"header.wrapper\": \"header--light\",\r\n    \"sidebar.wrapper\": \"sidebar--light\",\r\n    \"content.wrapper\": \"content--light\",\r\n    button: \"button--light\",\r\n    show: false,\r\n  },\r\n  dark: {\r\n    \"header.wrapper\": \"header--dark\",\r\n    \"sidebar.wrapper\": \"sidebar--dark\",\r\n    \"content.wrapper\": \"content--dark\",\r\n    button: \"button--dark\",\r\n    show: true,\r\n  },\r\n};\r\n\r\nconst ThemeContext = React.createContext(themes);\r\nexport default ThemeContext;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../theme-context\";\r\n\r\nfunction Theme({ toggleTheme }) {\r\n  const themes = useContext(ThemeContext);\r\n  return (\r\n    <div className=\"themeModal\">\r\n      <button\r\n        className=\"themeModalButton\"\r\n        onClick={toggleTheme}\r\n        title={`Switch to ${themes.show ? \"light\" : \"dark\"} theme`}\r\n      >\r\n        <i\r\n          className={`${\r\n            themes.show ? \"fas fa-sun fa-lg\" : \"fas fa-moon fa-lg\"\r\n          } ${\"buttonIcons\"} ${themes.button}`}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Theme;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Header.css\";\r\nimport Theme from \"./ThemeModal/Theme\";\r\nimport ThemeContext from \"../Header/theme-context\";\r\nlet Header = ({ toggleTheme }) => {\r\n  const themes = useContext(ThemeContext);\r\n  return (\r\n    <header className={`${\"header\"} ${themes[\"header.wrapper\"]}`}>\r\n      <h2 className=\"headerSlogan\">React ToDo App</h2>\r\n      <Theme theme={themes} toggleTheme={toggleTheme} />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Pagination.css\";\r\nfunction Pagination({\r\n  todos,\r\n  itemsPerPage,\r\n  currentPage,\r\n  currentPageHandler,\r\n  currentTodos,\r\n}) {\r\n  let numberOfPage = [];\r\n  let numberOfItems = todos.length;\r\n  let paginateItemsCounter = Math.ceil(numberOfItems / itemsPerPage);\r\n  let numberTodos = currentTodos.length;\r\n  for (let i = 1; i <= paginateItemsCounter; i++) {\r\n    numberOfPage.push(i);\r\n  }\r\n  useEffect(() => {\r\n    if (numberTodos === 0) {\r\n      currentPageHandler(paginateItemsCounter);\r\n    }\r\n  }, [currentPage, currentPageHandler, paginateItemsCounter, numberTodos]);\r\n\r\n  return (\r\n    <div className={numberOfPage.length <= 1 ? \"Paginate\" : \"Paginate Active\"}>\r\n      <ul>\r\n        <li>\r\n          <button\r\n            onClick={() => {\r\n              currentPageHandler(currentPage <= 1 ? 1 : currentPage - 1);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-angle-double-left fa-sm\" />\r\n          </button>\r\n        </li>\r\n        {numberOfPage.map((number) => (\r\n          <li key={number}>\r\n            <button\r\n              className={currentPage === number ? \"ActivePage\" : null}\r\n              onClick={() => {\r\n                currentPageHandler(number);\r\n              }}\r\n            >\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n        <li>\r\n          <button\r\n            onClick={() =>\r\n              currentPageHandler(\r\n                currentPage >= paginateItemsCounter\r\n                  ? paginateItemsCounter\r\n                  : currentPage + 1\r\n              )\r\n            }\r\n          >\r\n            <i className=\"fas fa-angle-double-right\" />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function TodoItem({\r\n  showButton,\r\n  item,\r\n  handleChange,\r\n  textEdit,\r\n  saveEditedText,\r\n  deleteItem,\r\n  toggleButton,\r\n  currentItemId,\r\n  category,\r\n  view,\r\n}) {\r\n  const inputTodoEditedText = useRef(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedText, setEditedText] = useState(item.text);\r\n  let inputEditedTodoValueHandler = (e) => setEditedText(e.target.value);\r\n  useEffect(() => {\r\n    if (isEditing) inputTodoEditedText.current.focus();\r\n  }, [isEditing]);\r\n\r\n  return (\r\n    <div className={`${view ? \"todo-item-grid\" : \"todo-item\"}`}>\r\n      <input\r\n        className=\"checkBoxItem\"\r\n        type=\"checkbox\"\r\n        checked={item.completed}\r\n        onChange={() => handleChange(item.id)}\r\n      />\r\n      {isEditing ? (\r\n        <input\r\n          className={`${view ? \"todoItemInputGrid \" : \"todoItemInput\"}`}\r\n          type=\"text\"\r\n          ref={inputTodoEditedText}\r\n          onChange={inputEditedTodoValueHandler}\r\n          value={editedText}\r\n        />\r\n      ) : (\r\n        <p\r\n          className={`${item.completed ? \"todoText Completed\" : \"todoText\"}`}\r\n          onClick={() => handleChange(item.id)}\r\n        >\r\n          {editedText}\r\n        </p>\r\n      )}\r\n      <span className=\"todoItemCategory\">{category}</span>\r\n      {showButton ? (\r\n        <button\r\n          className={`${\"saveEditedText\"} ${\r\n            showButton && currentItemId === item.id\r\n              ? \"showButton\"\r\n              : \"hideButton\"\r\n          }`}\r\n          onClick={() => {\r\n            saveEditedText(item.id, editedText);\r\n            toggleButton(!showButton);\r\n            setIsEditing(!isEditing);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-save\" />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className={`${\"textEdit\"} ${\r\n            showButton && currentItemId === item.id\r\n              ? \"hideButton\"\r\n              : \"showButton\"\r\n          }`}\r\n          onClick={() => {\r\n            textEdit(item.id, editedText);\r\n            toggleButton(!showButton);\r\n            setIsEditing(!isEditing);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-pen\" />\r\n        </button>\r\n      )}\r\n\r\n      <button\r\n        className=\"todoItemDelete\"\r\n        onClick={() => {\r\n          if (isEditing) return;\r\n          else {\r\n            deleteItem(item.id);\r\n          }\r\n        }}\r\n      >\r\n        <i className=\"fas fa-trash\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoItemsList({\r\n  todos,\r\n  search,\r\n  textEdit,\r\n  showButton,\r\n  handleChange,\r\n  toggleButton,\r\n  saveEditedText,\r\n  deleteItem,\r\n  currentPage,\r\n  itemsPerPage,\r\n  currentItemId,\r\n  currentCategory,\r\n  currentDateRange,\r\n  currentPageHandler,\r\n  itemsPerPageHandler,\r\n  status,\r\n  today,\r\n  month,\r\n  view,\r\n}) {\r\n  useEffect(() => {\r\n    if (!view) {\r\n      itemsPerPageHandler(4);\r\n    } else {\r\n      itemsPerPageHandler(9);\r\n    }\r\n  }, [view, itemsPerPage]);\r\n  let dayAdd = (numberDays) => {\r\n    return new Date(\r\n      today.getFullYear(),\r\n      today.getMonth(),\r\n      today.getDate() + numberDays\r\n    );\r\n  };\r\n\r\n  let daySubst = (numberDays) => {\r\n    return new Date(\r\n      today.getFullYear(),\r\n      today.getMonth(),\r\n      today.getDate() - numberDays\r\n    );\r\n  };\r\n\r\n  let startOfWeek;\r\n  let endOfWeek;\r\n  let getDaysArray = (start, end) => {\r\n    let dates = [];\r\n    let day = new Date(start);\r\n    for (day; day <= end; day.setDate(day.getDate() + 1)) {\r\n      dates.push(new Date(day));\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  const filteredTodos = todos\r\n    .filter((item) => {\r\n      if (currentCategory === \"\") return true;\r\n      else if (\r\n        currentCategory === \"My todos\" &&\r\n        item.category === currentCategory\r\n      ) {\r\n        return true;\r\n      } else if (\r\n        currentCategory === \"Hobby\" &&\r\n        item.category === currentCategory\r\n      ) {\r\n        return true;\r\n      } else if (\r\n        currentCategory === \"Other\" &&\r\n        item.category === currentCategory\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })\r\n    .filter((item) => {\r\n      if (status === \"all\") return true;\r\n      else if (status === \"completed\" && item.completed === true) {\r\n        return true;\r\n      } else if (status === \"uncompleted\" && item.completed === false) {\r\n        return true;\r\n      }\r\n      return false;\r\n    })\r\n    .filter((item) => {\r\n      if (currentDateRange === \"\") {\r\n        return true;\r\n      } else if (\r\n        currentDateRange === \"Today\" &&\r\n        item.date.toLocaleDateString() === today.toLocaleDateString()\r\n      ) {\r\n        return true;\r\n      } else if (currentDateRange === \"This Week\") {\r\n        switch (today.getDay()) {\r\n          case 0:\r\n            startOfWeek = daySubst(6);\r\n            endOfWeek = dayAdd(0);\r\n            break;\r\n          case 1:\r\n            startOfWeek = daySubst(0);\r\n            endOfWeek = dayAdd(6);\r\n            break;\r\n          case 2:\r\n            startOfWeek = daySubst(1);\r\n            endOfWeek = dayAdd(5);\r\n            break;\r\n          case 3:\r\n            startOfWeek = daySubst(2);\r\n            endOfWeek = dayAdd(4);\r\n            break;\r\n          case 4:\r\n            startOfWeek = daySubst(3);\r\n            endOfWeek = dayAdd(3);\r\n            break;\r\n          case 5:\r\n            startOfWeek = daySubst(4);\r\n            endOfWeek = dayAdd(2);\r\n            break;\r\n          case 6:\r\n            startOfWeek = daySubst(5);\r\n            endOfWeek = dayAdd(1);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        let dayList = getDaysArray(new Date(startOfWeek), new Date(endOfWeek));\r\n        let thisWeek = dayList.map((day) => day.toLocaleDateString());\r\n        if (thisWeek.includes(item.date.toLocaleDateString())) return true;\r\n      } else if (currentDateRange === \"This Month\") {\r\n        let startMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n        let endMonth = new Date(\r\n          today.getFullYear(),\r\n          month[today.getMonth()],\r\n          1 - 1\r\n        );\r\n        let dayList = getDaysArray(new Date(startMonth), new Date(endMonth));\r\n        let thisMonth = dayList.map((day) => day.toLocaleDateString());\r\n        if (thisMonth.includes(item.date.toLocaleDateString())) return true;\r\n      }\r\n      return false;\r\n    })\r\n    .filter((item) =>\r\n      item.text.toLowerCase().includes(search.trim().toLowerCase())\r\n    )\r\n    .reverse();\r\n\r\n  const currentTodos = filteredTodos.filter((item, index) =>\r\n    Math.ceil(++index / itemsPerPage) === currentPage ? item : null\r\n  );\r\n  return (\r\n    <div className=\"toDoListWrapper\">\r\n      <div className={`${view ? \"TodoItemsGridList\" : \"TodoItemsList\"}`}>\r\n        {currentTodos.map((item) => (\r\n          <TodoItem\r\n            key={item.id}\r\n            item={item}\r\n            category={item.category}\r\n            currentItemId={currentItemId}\r\n            handleChange={handleChange}\r\n            deleteItem={deleteItem}\r\n            textEdit={textEdit}\r\n            saveEditedText={saveEditedText}\r\n            showButton={showButton}\r\n            currentCategory={currentCategory}\r\n            toggleButton={toggleButton}\r\n            view={view}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Pagination\r\n        view={view}\r\n        todos={filteredTodos}\r\n        currentTodos={currentTodos}\r\n        currentPage={currentPage}\r\n        itemsPerPage={itemsPerPage}\r\n        currentCategory={currentCategory}\r\n        currentPageHandler={currentPageHandler}\r\n        itemsPerPageHandler={itemsPerPageHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nexport const Search = ({ onSearch }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  let searchTodo = (e) => setSearchValue(e.target.value);\r\n  return (\r\n    <form className=\"searchWrapper\">\r\n      <input\r\n        className=\"input inputSearchTodoText\"\r\n        type=\"text\"\r\n        value={searchValue}\r\n        onChange={searchTodo}\r\n        onKeyUp={() => onSearch(searchValue)}\r\n        placeholder=\"  Search...\"\r\n        required\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nfunction DateSelector({ currentDateRangeHandler }) {\r\n  let dateHandler = (e) => currentDateRangeHandler(e.target.value);\r\n  return (\r\n    <div className=\"dateSelectorWrapper\">\r\n      <select className=\"selectorTop dateSelector\" onChange={dateHandler}>\r\n        <option value=\"\">Select date</option>\r\n        <option value=\"Today\">Today</option>\r\n        <option value=\"This Week\">This Week</option>\r\n        <option value=\"This Month\">This Month</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\nexport default DateSelector;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalWrapper({ modal, setModal }) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  let userNameInputHandler = (e) => setUserName(e.target.value);\r\n  let messageInputHandler = (e) => setMessage(e.target.value);\r\n  let emailInputHandler = (e) => setEmail(e.target.value);\r\n  let submitHandler = () => {\r\n    if (userName === \"\" || message === \"\" || email === \"\") {\r\n      alert(\"please fill in all the lines\");\r\n    } else {\r\n      let userData = {\r\n        userName,\r\n        message,\r\n        email,\r\n      };\r\n      localStorage.setItem(`${userName}`, JSON.stringify(userData));\r\n      setUserName(\"\");\r\n      setMessage(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  let resetHandler = () => {\r\n    setUserName(\"\");\r\n    setMessage(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  let closeModalHandler = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={modal} onRequestClose={modal} className=\"Modal\">\r\n      <div className=\"Modal\">\r\n        <div className=\"modalWrapper\">\r\n          <form className=\"modalWrapperForm\">\r\n            <h1 className=\"Contact\">Contact</h1>\r\n            <div className=\"userNameWrapper\">\r\n              <label className=\"nameTitle\">Username</label>\r\n              <input\r\n                className=\"userNameInput inputModal\"\r\n                required\r\n                value={userName}\r\n                type=\"text\"\r\n                name=\"Username\"\r\n                id=\"Username\"\r\n                onChange={userNameInputHandler}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"messageWrapper\">\r\n              <label className=\"messageTitle\">Message</label>\r\n              <input\r\n                className=\"messageInput inputModal\"\r\n                required\r\n                value={message}\r\n                type=\"text\"\r\n                name=\"Message\"\r\n                id=\"Message\"\r\n                onChange={messageInputHandler}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"emailWrapper\">\r\n              <label className=\"emailTitle\">Email</label>\r\n              <input\r\n                className=\"emailInput inputModal\"\r\n                required\r\n                value={email}\r\n                type=\"email\"\r\n                name=\"Email\"\r\n                id=\"Email\"\r\n                onChange={emailInputHandler}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"modalWrapperButtons\">\r\n            <button\r\n              className=\"submitButton modalButton\"\r\n              onClick={() => submitHandler()}\r\n            >\r\n              SUBMIT\r\n            </button>\r\n            <button\r\n              className=\"resetButton modalButton\"\r\n              onClick={() => resetHandler()}\r\n            >\r\n              RESET\r\n            </button>\r\n            <button\r\n              className=\"closeButton modalButton\"\r\n              onClick={() => closeModalHandler()}\r\n            >\r\n              CANCEL\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalWrapper;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport ModalWrapper from \"../Modal/Modal\";\r\nimport ThemeContext from \"../Header/theme-context\";\r\nexport default function Sidebar({\r\n  status,\r\n  showModal,\r\n  showSideBar,\r\n  statusSwitchHandler,\r\n}) {\r\n  const uncompletedTodos = useRef(null);\r\n  const completedTodos = useRef(null);\r\n  const allTodos = useRef(null);\r\n  const [displayAllTodos, setDisplayAllTodos] = useState(true);\r\n  const [sidebar, setSidebar] = useState(showSideBar);\r\n  const [modal, setModal] = useState(showModal);\r\n  const themes = useContext(ThemeContext);\r\n\r\n  let sidebarToggleHandler = () => setSidebar(() => !sidebar);\r\n  let modalToggleHandler = () => setModal(() => !modal);\r\n  let allTodosToggleHandler = () => {\r\n    setDisplayAllTodos(!displayAllTodos);\r\n  };\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      return setSidebar(null);\r\n    } else if (status === \"uncompleted\") {\r\n      return setSidebar(null);\r\n    } else if (status === \"all\") {\r\n      return setSidebar(null);\r\n    }\r\n  }, [status]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        value=\"all\"\r\n        className=\"menu-bars\"\r\n        ref={allTodos}\r\n        onClick={() => {\r\n          sidebarToggleHandler();\r\n          setModal(\"\");\r\n        }}\r\n      >\r\n        <i\r\n          className={`${sidebar ? \"fa fa-times fa-2x\" : \"fa fa-bars fa-2x\"} ${\r\n            themes.button\r\n          }`}\r\n        />\r\n      </button>\r\n      <aside\r\n        className={`${sidebar ? \"sidebar active\" : \"sidebar\"} ${\r\n          themes[\"sidebar.wrapper\"]\r\n        } `}\r\n      >\r\n        <div className=\"sidebar-items\">\r\n          <button\r\n            value=\"uncompleted\"\r\n            ref={uncompletedTodos}\r\n            onClick={() => {\r\n              statusSwitchHandler(\r\n                displayAllTodos\r\n                  ? uncompletedTodos.current.value\r\n                  : allTodos.current.value\r\n              );\r\n              allTodosToggleHandler();\r\n            }}\r\n          >\r\n            Active todos\r\n          </button>\r\n          <button\r\n            value=\"completed\"\r\n            ref={completedTodos}\r\n            onClick={() => {\r\n              statusSwitchHandler(\r\n                displayAllTodos\r\n                  ? completedTodos.current.value\r\n                  : allTodos.current.value\r\n              );\r\n              allTodosToggleHandler();\r\n            }}\r\n          >\r\n            Completed todos\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              modalToggleHandler();\r\n              setSidebar(() => !sidebar);\r\n            }}\r\n          >\r\n            Contact us\r\n          </button>\r\n        </div>\r\n      </aside>\r\n      {modal ? <ModalWrapper modal={modal} setModal={setModal} /> : null}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction CategoriesSelector({\r\n  categories,\r\n  currentCategory,\r\n  categorySwitchHandler,\r\n}) {\r\n  let categoryHandler = (e) => {\r\n    categorySwitchHandler(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"categoriesSelectorWrapper \">\r\n      <select\r\n        className=\"selectorTop categoriesSelector\"\r\n        onChange={categoryHandler}\r\n        defaultValue={currentCategory}\r\n        name=\"Category list\"\r\n      >\r\n        <option value=\"\">Select category</option>\r\n        {categories.map((item) => (\r\n          <option value={item.label} key={item.id}>\r\n            {item.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoriesSelector;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AddForm = ({\r\n  newTodoCategory,\r\n  categories,\r\n  addTodo,\r\n  newTodoCategoryHandler,\r\n}) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  let inputHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  let onSubmit = () => {\r\n    addTodo(inputText);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"addTodoWrapper\">\r\n      <form className=\"addTodoWrapperForm\">\r\n        <input\r\n          autoFocus={true}\r\n          className=\"input inputTodoText\"\r\n          type=\"text\"\r\n          placeholder=\"Add some new todo here...\"\r\n          required\r\n          value={inputText}\r\n          onChange={inputHandler}\r\n        />\r\n        <select\r\n          value={newTodoCategory}\r\n          className=\"addTodoSelect\"\r\n          onChange={newTodoCategoryHandler}\r\n        >\r\n          <option>Choose category</option>\r\n          {categories.map((item) => (\r\n            <option value={item.label} key={item.id}>\r\n              {item.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button className=\"addButton\" type=\"button\" onClick={() => onSubmit()}>\r\n          <i className=\"fas fa-plus fa-lg\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ViewChangeButton = ({ view, viewToggle }) => {\r\n  return (\r\n    <button\r\n      className=\"viewChangeButton\"\r\n      title={`Switch to ${view ? \"list\" : \"grid\"} view`}\r\n      onClick={viewToggle}\r\n    >\r\n      <i className={view ? \"fas fa-list fa-lg\" : \" fas fa-th fa-lg \"} />\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport TodoItemsList from \"./TodoItemsList\";\r\nimport { Search } from \"../Search/Search\";\r\nimport DateSelector from \"../DateSelector/DateSelector\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport CategoriesSelector from \"../Categories/CategoriesSelector\";\r\nimport { AddForm } from \"../AddForm/AddForm\";\r\nimport { ViewChangeButton } from \"../ViewButton/ViewChangeButton.jsx\";\r\nexport default class Practice extends React.Component {\r\n  constructor({ todosData, Categories, month }) {\r\n    super();\r\n    this.newTodoItemCategory = React.createRef();\r\n    this.state = {\r\n      search: \"\",\r\n      status: \"all\",\r\n      currentItemId: 0,\r\n      showButton: false,\r\n      showSideBar: false,\r\n      showModal: false,\r\n      view: false,\r\n      todos: todosData,\r\n      categories: Categories,\r\n      currentCategory: \"\",\r\n      currentDateRange: \"\",\r\n      newTodoCategory: \"\",\r\n      today: new Date(),\r\n      month,\r\n      itemsPerPage: 4,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  handleChange = (id) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.map((todo) => {\r\n        todo.completed = todo.id === id ? !todo.completed : todo.completed;\r\n        return todo;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  addNewTodo = (text) => {\r\n    const { todos, newTodoCategory } = this.state;\r\n    let newTodo = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false,\r\n      date: new Date(),\r\n      category: newTodoCategory,\r\n    };\r\n    this.setState({ todos: [...todos, newTodo] });\r\n    this.setState({ currentPage: 1 });\r\n  };\r\n\r\n  addTodo = (text) => {\r\n    let success = true;\r\n    let messageErrors = \"\";\r\n    if (text.length === 0) {\r\n      success = false;\r\n      messageErrors = \"Please enter your todo\";\r\n    }\r\n    this.state.todos.map((item) => {\r\n      if (!this.state.newTodoCategory) {\r\n        success = false;\r\n        messageErrors = \"Please choose your category\";\r\n      }\r\n      if (item.text === text && this.state.newTodoCategory === item.category) {\r\n        success = false;\r\n        messageErrors = \"This element already exists\";\r\n      }\r\n      return true;\r\n    });\r\n\r\n    if (success) {\r\n      this.addNewTodo(text);\r\n      this.newTodoCategoryHandlerClear();\r\n    } else {\r\n      alert(messageErrors);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  saveEditedText = (id, editedTodoText) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.text = editedTodoText;\r\n          editedTodoText = \"\";\r\n        }\r\n        return todo;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  textEdit = (id, editedTodoText) => {\r\n    this.setState({ currentItemId: id });\r\n    this.state.todos.filter((item) =>\r\n      item.id === id ? (editedTodoText = item.text) : null\r\n    );\r\n  };\r\n\r\n  deleteItem = (id) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.filter((todo) => (todo.id !== id ? todo : null)),\r\n    }));\r\n  };\r\n\r\n  toggleButton = (showButton) => this.setState({ showButton });\r\n\r\n  statusSwitchHandler = (status) => this.setState({ status });\r\n\r\n  handleSearch = (search) => this.setState({ search });\r\n\r\n  currentPageHandler = (currentPage) => this.setState({ currentPage });\r\n\r\n  newTodoCategoryHandler = (e) => {\r\n    this.setState({ newTodoCategory: e.target.value });\r\n  };\r\n  newTodoCategoryHandlerClear = () => this.setState({ newTodoCategory: \"\" });\r\n\r\n  categorySwitchHandler = (currentCategory) => {\r\n    this.setState({ currentCategory });\r\n  };\r\n\r\n  currentDateRangeHandler = (currentDateRange) =>\r\n    this.setState({ currentDateRange });\r\n\r\n  itemsPerPageHandler = (itemsPerPage) => this.setState({ itemsPerPage });\r\n\r\n  viewToggle = () => {\r\n    this.setState((prevState) => ({ view: !prevState.view }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"practice\">\r\n        <Sidebar\r\n          status={this.state.status}\r\n          statusSwitchHandler={this.statusSwitchHandler}\r\n          showSideBar={this.state.showSideBar}\r\n          showModal={this.state.showModal}\r\n        />\r\n        <div className=\"practiceTop\">\r\n          <ViewChangeButton\r\n            view={this.state.view}\r\n            viewToggle={this.viewToggle}\r\n          />\r\n\r\n          <Search onSearch={this.handleSearch} />\r\n\r\n          <DateSelector\r\n            currentDateRangeHandler={this.currentDateRangeHandler}\r\n            todos={this.state.todos}\r\n            currentDateRange={this.state.currentDateRange}\r\n          />\r\n          <CategoriesSelector\r\n            categories={this.state.categories}\r\n            currentCategory={this.state.currentCategory}\r\n            categorySwitchHandler={this.categorySwitchHandler}\r\n          />\r\n        </div>\r\n        <div className=\"main_Practice\">\r\n          <AddForm\r\n            categories={this.state.categories}\r\n            newTodoCategory={this.state.newTodoCategory}\r\n            addTodo={this.addTodo}\r\n            newTodoCategoryHandler={this.newTodoCategoryHandler}\r\n          />\r\n          <TodoItemsList\r\n            todos={this.state.todos}\r\n            category={this.state.categories}\r\n            handleChange={this.handleChange}\r\n            deleteItem={this.deleteItem}\r\n            textEdit={this.textEdit}\r\n            saveEditedText={this.saveEditedText}\r\n            showButton={this.state.showButton}\r\n            currentCategory={this.state.currentCategory}\r\n            currentItemId={this.state.currentItemId}\r\n            toggleButton={this.toggleButton}\r\n            search={this.state.search}\r\n            view={this.state.view}\r\n            status={this.state.status}\r\n            currentDateRange={this.state.currentDateRange}\r\n            today={this.state.today}\r\n            month={this.state.month}\r\n            currentPage={this.state.currentPage}\r\n            itemsPerPage={this.state.itemsPerPage}\r\n            itemsPerPageHandler={this.itemsPerPageHandler}\r\n            currentPageHandler={this.currentPageHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"./Content.css\";\r\nimport Practice from \"../Practice/Practice\";\r\nimport ThemeContext from \"../Header/theme-context\";\r\n\r\nfunction Content({ todosData, Categories, month }) {\r\n  const themes = useContext(ThemeContext);\r\n  return (\r\n    <main className={`${\"content\"} ${themes[\"content.wrapper\"]}`}>\r\n      <Practice todosData={todosData} Categories={Categories} month={month} />\r\n    </main>\r\n  );\r\n}\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <>\r\n      <>\r\n        <p>Phone: {props.phone}</p>\r\n        <p>Email: {props.email}</p>\r\n      </>\r\n      <>\r\n        <p>\r\n          Linkedin:\r\n          <a className=\"Linkedin\" href={props.social}>Oleh Kulchytskyi</a>\r\n        </p>\r\n        <p>&copy; by Oleh Kulchytskyi</p>\r\n      </>\r\n    </>\r\n  );\r\n}\r\nexport default Info;\r\n\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Info from \"./Info\";\r\n\r\nfunction Footer(props) {\r\n  const about = props.contacts.map((item, index) => (\r\n    <Info\r\n      key={index}\r\n      phone={item.tel.phone}\r\n      email={item.social.email}\r\n      social={item.social.linkedin}\r\n    />\r\n  ));\r\n  return <footer className=\"footer\">{about}</footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Content from \"./components/Content/Content\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport ThemeContext, { themes } from \"./components/Header/theme-context\";\r\n\r\nfunction App({ todosData, contacts, Categories, month }) {\r\n  const [theme, setTheme] = useState(themes.light);\r\n  const toggleTheme = () => {\r\n    theme === themes.dark ? setTheme(themes.light) : setTheme(themes.dark);\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={theme}>\r\n      <Header theme={theme} toggleTheme={toggleTheme} setTheme={setTheme} />\r\n      <Content\r\n        setTheme={setTheme}\r\n        className=\"content\"\r\n        todosData={todosData}\r\n        Categories={Categories}\r\n        month={month}\r\n      />\r\n      <Footer contacts={contacts} />\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\nexport default App;\r\n","const todosData = [\r\n  {\r\n    id: 1,\r\n    text: \"Go to shop\",\r\n    completed: true,\r\n    date: new Date(2021, 1, 1),\r\n    category: \"My todos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Buy apples\",\r\n    completed: false,\r\n    date: new Date(2021, 1, 12),\r\n    category: \"My todos\",\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Read some book\",\r\n    completed: true,\r\n    date: new Date(2021, 1, 17),\r\n    category: \"Hobby\",\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"Ride on bike\",\r\n    completed: false,\r\n    date: new Date(),\r\n    category: \"Other\",\r\n  },\r\n];\r\nexport default todosData;\r\nexport const Categories = [\r\n  {\r\n    id: 1,\r\n    label: \"My todos\",\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Hobby\",\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Other\",\r\n  },\r\n];\r\n\r\nexport const month = {\r\n  0: 1,\r\n  1: 2,\r\n  2: 3,\r\n  3: 4,\r\n  4: 5,\r\n  5: 6,\r\n  6: 7,\r\n  7: 8,\r\n  8: 9,\r\n  9: 10,\r\n  10: 11,\r\n  11: 12,\r\n};\r\n\r\nexport const contacts = [\r\n  {\r\n    tel: {\r\n      phone: \"0987073724\",\r\n    },\r\n    social: {\r\n      linkedin: \"https://www.linkedin.com/in/oleh-kulchytskyi/\",\r\n      email: \"olegkakb@gmail.com\",\r\n    },\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport todosData, {\r\n  contacts,\r\n  Categories,\r\n  month,\r\n} from \"./components/Data/todosData\";\r\n\r\nReactDOM.render(\r\n  <App\r\n    contacts={contacts}\r\n    todosData={todosData}\r\n    Categories={Categories}\r\n    month={month}\r\n  />,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}